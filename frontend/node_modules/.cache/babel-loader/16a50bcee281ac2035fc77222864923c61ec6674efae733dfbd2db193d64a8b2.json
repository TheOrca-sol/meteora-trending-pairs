{"ast":null,"code":"var _jsxFileName = \"/home/ayman/meteora-airdrop-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Connection, PublicKey } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HELIUS_RPC = 'https://mainnet.helius-rpc.com/?api-key=d8d8052a-72db-4652-8942-9ae97f24cdec';\nconst METEORA_API = 'https://dlmm-api.meteora.ag';\nconst connection = new Connection(HELIUS_RPC, {\n  commitment: 'confirmed',\n  confirmTransactionInitialTimeout: 60000\n});\nfunction App() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [liquidityPositions, setLiquidityPositions] = useState([]);\n  const [totals, setTotals] = useState({\n    deposits: 0,\n    withdrawals: 0,\n    claimedFees: 0\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [lastSignature, setLastSignature] = useState(null);\n  const fetchTransactions = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const pubkey = new PublicKey(walletAddress);\n      const options = {\n        limit: 50\n      };\n      if (lastSignature) {\n        options.before = lastSignature;\n      }\n      const signatures = await connection.getConfirmedSignaturesForAddress2(pubkey, options);\n      if (signatures.length > 0) {\n        setLastSignature(signatures[signatures.length - 1].signature);\n      }\n      const txs = [];\n      for (const sig of signatures) {\n        try {\n          await new Promise(resolve => setTimeout(resolve, 200));\n          const tx = await connection.getParsedTransaction(sig.signature, {\n            maxSupportedTransactionVersion: 0\n          });\n          if (tx) txs.push(tx);\n        } catch (err) {\n          console.error('Error fetching transaction:', err);\n        }\n      }\n      setTransactions(prevTxs => [...prevTxs, ...txs]);\n      console.log('Fetched transactions:', txs);\n    } catch (err) {\n      setError('Error fetching transactions: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const isMeteoraOrHawksightTx = tx => {\n    // This is a placeholder. You'll need to implement the actual logic\n    // to determine if a transaction is related to Meteora or Hawksight\n    return tx.transaction.message.accountKeys.some(key => key.pubkey.toString() === 'METEORA_PROGRAM_ID' || key.pubkey.toString() === 'HAWKSIGHT_PROGRAM_ID');\n  };\n  const getPositionAddress = tx => {\n    // This is a placeholder. You'll need to implement the actual logic\n    // to extract the position address from the transaction\n    return tx.transaction.message.accountKeys[0].pubkey.toString();\n  };\n  const fetchPositionInfo = async positionAddress => {\n    try {\n      const response = await axios.get(`${METEORA_API}/position/${positionAddress}`);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching position info:', err);\n      return null;\n    }\n  };\n  const analyzeLiquidityPositions = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const liquidityTxs = transactions.filter(isMeteoraOrHawksightTx);\n      console.log('Filtered liquidity transactions:', liquidityTxs);\n      const positions = await Promise.all(liquidityTxs.map(async tx => {\n        const positionAddress = getPositionAddress(tx);\n        return await fetchPositionInfo(positionAddress);\n      }));\n      const validPositions = positions.filter(p => p !== null);\n      setLiquidityPositions(validPositions);\n      console.log('Fetched liquidity positions:', validPositions);\n      const newTotals = validPositions.reduce((acc, position) => {\n        acc.deposits += position.totalDeposits || 0;\n        acc.withdrawals += position.totalWithdrawals || 0;\n        acc.claimedFees += position.totalClaimedFees || 0;\n        return acc;\n      }, {\n        deposits: 0,\n        withdrawals: 0,\n        claimedFees: 0\n      });\n      setTotals(newTotals);\n      console.log('Calculated totals:', newTotals);\n    } catch (err) {\n      setError('Error analyzing positions: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (walletAddress) {\n      fetchTransactions();\n    }\n  }, [walletAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wallet Transaction Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: walletAddress,\n      onChange: e => setWalletAddress(e.target.value),\n      placeholder: \"Enter wallet address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyzeLiquidityPositions,\n      disabled: loading || !transactions.length,\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Deposits: \", totals.deposits]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Withdrawals: \", totals.withdrawals]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Claimed Fees: \", totals.claimedFees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Liquidity Positions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: liquidityPositions.map((position, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Position Address: \", position.address, \", Deposits: \", position.totalDeposits, \", Withdrawals: \", position.totalWithdrawals, \", Claimed Fees: \", position.totalClaimedFees]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YvQ/W/ARC6kMhNvKgplPG5FelR4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Connection","PublicKey","jsxDEV","_jsxDEV","HELIUS_RPC","METEORA_API","connection","commitment","confirmTransactionInitialTimeout","App","_s","walletAddress","setWalletAddress","transactions","setTransactions","liquidityPositions","setLiquidityPositions","totals","setTotals","deposits","withdrawals","claimedFees","loading","setLoading","error","setError","lastSignature","setLastSignature","fetchTransactions","pubkey","options","limit","before","signatures","getConfirmedSignaturesForAddress2","length","signature","txs","sig","Promise","resolve","setTimeout","tx","getParsedTransaction","maxSupportedTransactionVersion","push","err","console","prevTxs","log","message","isMeteoraOrHawksightTx","transaction","accountKeys","some","key","toString","getPositionAddress","fetchPositionInfo","positionAddress","response","get","data","analyzeLiquidityPositions","liquidityTxs","filter","positions","all","map","validPositions","p","newTotals","reduce","acc","position","totalDeposits","totalWithdrawals","totalClaimedFees","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","style","color","index","address","_c","$RefreshReg$"],"sources":["/home/ayman/meteora-airdrop-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Connection, PublicKey } from '@solana/web3.js';\n\nconst HELIUS_RPC = 'https://mainnet.helius-rpc.com/?api-key=d8d8052a-72db-4652-8942-9ae97f24cdec';\nconst METEORA_API = 'https://dlmm-api.meteora.ag';\n\nconst connection = new Connection(HELIUS_RPC, {\n  commitment: 'confirmed',\n  confirmTransactionInitialTimeout: 60000,\n});\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState('');\n  const [transactions, setTransactions] = useState([]);\n  const [liquidityPositions, setLiquidityPositions] = useState([]);\n  const [totals, setTotals] = useState({ deposits: 0, withdrawals: 0, claimedFees: 0 });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [lastSignature, setLastSignature] = useState(null);\n\n  const fetchTransactions = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const pubkey = new PublicKey(walletAddress);\n      const options = { limit: 50 };\n      if (lastSignature) {\n        options.before = lastSignature;\n      }\n      const signatures = await connection.getConfirmedSignaturesForAddress2(pubkey, options);\n      \n      if (signatures.length > 0) {\n        setLastSignature(signatures[signatures.length - 1].signature);\n      }\n\n      const txs = [];\n      for (const sig of signatures) {\n        try {\n          await new Promise(resolve => setTimeout(resolve, 200));\n          const tx = await connection.getParsedTransaction(sig.signature, {\n            maxSupportedTransactionVersion: 0\n          });\n          if (tx) txs.push(tx);\n        } catch (err) {\n          console.error('Error fetching transaction:', err);\n        }\n      }\n      \n      setTransactions(prevTxs => [...prevTxs, ...txs]);\n      console.log('Fetched transactions:', txs);\n    } catch (err) {\n      setError('Error fetching transactions: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const isMeteoraOrHawksightTx = (tx) => {\n    // This is a placeholder. You'll need to implement the actual logic\n    // to determine if a transaction is related to Meteora or Hawksight\n    return tx.transaction.message.accountKeys.some(key => \n      key.pubkey.toString() === 'METEORA_PROGRAM_ID' || \n      key.pubkey.toString() === 'HAWKSIGHT_PROGRAM_ID'\n    );\n  };\n\n  const getPositionAddress = (tx) => {\n    // This is a placeholder. You'll need to implement the actual logic\n    // to extract the position address from the transaction\n    return tx.transaction.message.accountKeys[0].pubkey.toString();\n  };\n\n  const fetchPositionInfo = async (positionAddress) => {\n    try {\n      const response = await axios.get(`${METEORA_API}/position/${positionAddress}`);\n      return response.data;\n    } catch (err) {\n      console.error('Error fetching position info:', err);\n      return null;\n    }\n  };\n\n  const analyzeLiquidityPositions = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const liquidityTxs = transactions.filter(isMeteoraOrHawksightTx);\n      console.log('Filtered liquidity transactions:', liquidityTxs);\n\n      const positions = await Promise.all(\n        liquidityTxs.map(async tx => {\n          const positionAddress = getPositionAddress(tx);\n          return await fetchPositionInfo(positionAddress);\n        })\n      );\n      const validPositions = positions.filter(p => p !== null);\n      setLiquidityPositions(validPositions);\n      console.log('Fetched liquidity positions:', validPositions);\n\n      const newTotals = validPositions.reduce((acc, position) => {\n        acc.deposits += position.totalDeposits || 0;\n        acc.withdrawals += position.totalWithdrawals || 0;\n        acc.claimedFees += position.totalClaimedFees || 0;\n        return acc;\n      }, { deposits: 0, withdrawals: 0, claimedFees: 0 });\n      setTotals(newTotals);\n      console.log('Calculated totals:', newTotals);\n    } catch (err) {\n      setError('Error analyzing positions: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (walletAddress) {\n      fetchTransactions();\n    }\n  }, [walletAddress]);\n\n  return (\n    <div>\n      <h1>Wallet Transaction Analyzer</h1>\n      <input\n        type=\"text\"\n        value={walletAddress}\n        onChange={(e) => setWalletAddress(e.target.value)}\n        placeholder=\"Enter wallet address\"\n      />\n      <button onClick={analyzeLiquidityPositions} disabled={loading || !transactions.length}>\n        Analyze\n      </button>\n      {loading && <p>Loading...</p>}\n      {error && <p style={{color: 'red'}}>{error}</p>}\n      {!loading && !error && (\n        <div>\n          <h2>Results:</h2>\n          <p>Total Deposits: {totals.deposits}</p>\n          <p>Total Withdrawals: {totals.withdrawals}</p>\n          <p>Total Claimed Fees: {totals.claimedFees}</p>\n          <h3>Liquidity Positions:</h3>\n          <ul>\n            {liquidityPositions.map((position, index) => (\n              <li key={index}>\n                Position Address: {position.address}, \n                Deposits: {position.totalDeposits}, \n                Withdrawals: {position.totalWithdrawals}, \n                Claimed Fees: {position.totalClaimedFees}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,UAAU,GAAG,8EAA8E;AACjG,MAAMC,WAAW,GAAG,6BAA6B;AAEjD,MAAMC,UAAU,GAAG,IAAIN,UAAU,CAACI,UAAU,EAAE;EAC5CG,UAAU,EAAE,WAAW;EACvBC,gCAAgC,EAAE;AACpC,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,QAAQ,EAAE,CAAC;IAAEC,WAAW,EAAE,CAAC;IAAEC,WAAW,EAAE;EAAE,CAAC,CAAC;EACrF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM+B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCL,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMI,MAAM,GAAG,IAAI5B,SAAS,CAACU,aAAa,CAAC;MAC3C,MAAMmB,OAAO,GAAG;QAAEC,KAAK,EAAE;MAAG,CAAC;MAC7B,IAAIL,aAAa,EAAE;QACjBI,OAAO,CAACE,MAAM,GAAGN,aAAa;MAChC;MACA,MAAMO,UAAU,GAAG,MAAM3B,UAAU,CAAC4B,iCAAiC,CAACL,MAAM,EAAEC,OAAO,CAAC;MAEtF,IAAIG,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACzBR,gBAAgB,CAACM,UAAU,CAACA,UAAU,CAACE,MAAM,GAAG,CAAC,CAAC,CAACC,SAAS,CAAC;MAC/D;MAEA,MAAMC,GAAG,GAAG,EAAE;MACd,KAAK,MAAMC,GAAG,IAAIL,UAAU,EAAE;QAC5B,IAAI;UACF,MAAM,IAAIM,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;UACtD,MAAME,EAAE,GAAG,MAAMpC,UAAU,CAACqC,oBAAoB,CAACL,GAAG,CAACF,SAAS,EAAE;YAC9DQ,8BAA8B,EAAE;UAClC,CAAC,CAAC;UACF,IAAIF,EAAE,EAAEL,GAAG,CAACQ,IAAI,CAACH,EAAE,CAAC;QACtB,CAAC,CAAC,OAAOI,GAAG,EAAE;UACZC,OAAO,CAACvB,KAAK,CAAC,6BAA6B,EAAEsB,GAAG,CAAC;QACnD;MACF;MAEAhC,eAAe,CAACkC,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAE,GAAGX,GAAG,CAAC,CAAC;MAChDU,OAAO,CAACE,GAAG,CAAC,uBAAuB,EAAEZ,GAAG,CAAC;IAC3C,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZrB,QAAQ,CAAC,+BAA+B,GAAGqB,GAAG,CAACI,OAAO,CAAC;IACzD,CAAC,SAAS;MACR3B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4B,sBAAsB,GAAIT,EAAE,IAAK;IACrC;IACA;IACA,OAAOA,EAAE,CAACU,WAAW,CAACF,OAAO,CAACG,WAAW,CAACC,IAAI,CAACC,GAAG,IAChDA,GAAG,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,KAAK,oBAAoB,IAC9CD,GAAG,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,KAAK,sBAC5B,CAAC;EACH,CAAC;EAED,MAAMC,kBAAkB,GAAIf,EAAE,IAAK;IACjC;IACA;IACA,OAAOA,EAAE,CAACU,WAAW,CAACF,OAAO,CAACG,WAAW,CAAC,CAAC,CAAC,CAACxB,MAAM,CAAC2B,QAAQ,CAAC,CAAC;EAChE,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,eAAe,IAAK;IACnD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7D,KAAK,CAAC8D,GAAG,CAAC,GAAGxD,WAAW,aAAasD,eAAe,EAAE,CAAC;MAC9E,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOhB,GAAG,EAAE;MACZC,OAAO,CAACvB,KAAK,CAAC,+BAA+B,EAAEsB,GAAG,CAAC;MACnD,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMiB,yBAAyB,GAAG,MAAAA,CAAA,KAAY;IAC5CxC,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMuC,YAAY,GAAGnD,YAAY,CAACoD,MAAM,CAACd,sBAAsB,CAAC;MAChEJ,OAAO,CAACE,GAAG,CAAC,kCAAkC,EAAEe,YAAY,CAAC;MAE7D,MAAME,SAAS,GAAG,MAAM3B,OAAO,CAAC4B,GAAG,CACjCH,YAAY,CAACI,GAAG,CAAC,MAAM1B,EAAE,IAAI;QAC3B,MAAMiB,eAAe,GAAGF,kBAAkB,CAACf,EAAE,CAAC;QAC9C,OAAO,MAAMgB,iBAAiB,CAACC,eAAe,CAAC;MACjD,CAAC,CACH,CAAC;MACD,MAAMU,cAAc,GAAGH,SAAS,CAACD,MAAM,CAACK,CAAC,IAAIA,CAAC,KAAK,IAAI,CAAC;MACxDtD,qBAAqB,CAACqD,cAAc,CAAC;MACrCtB,OAAO,CAACE,GAAG,CAAC,8BAA8B,EAAEoB,cAAc,CAAC;MAE3D,MAAME,SAAS,GAAGF,cAAc,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;QACzDD,GAAG,CAACtD,QAAQ,IAAIuD,QAAQ,CAACC,aAAa,IAAI,CAAC;QAC3CF,GAAG,CAACrD,WAAW,IAAIsD,QAAQ,CAACE,gBAAgB,IAAI,CAAC;QACjDH,GAAG,CAACpD,WAAW,IAAIqD,QAAQ,CAACG,gBAAgB,IAAI,CAAC;QACjD,OAAOJ,GAAG;MACZ,CAAC,EAAE;QAAEtD,QAAQ,EAAE,CAAC;QAAEC,WAAW,EAAE,CAAC;QAAEC,WAAW,EAAE;MAAE,CAAC,CAAC;MACnDH,SAAS,CAACqD,SAAS,CAAC;MACpBxB,OAAO,CAACE,GAAG,CAAC,oBAAoB,EAAEsB,SAAS,CAAC;IAC9C,CAAC,CAAC,OAAOzB,GAAG,EAAE;MACZrB,QAAQ,CAAC,6BAA6B,GAAGqB,GAAG,CAACI,OAAO,CAAC;IACvD,CAAC,SAAS;MACR3B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAIa,aAAa,EAAE;MACjBiB,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACjB,aAAa,CAAC,CAAC;EAEnB,oBACER,OAAA;IAAA2E,QAAA,gBACE3E,OAAA;MAAA2E,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC/E,OAAA;MACEgF,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzE,aAAc;MACrB0E,QAAQ,EAAGC,CAAC,IAAK1E,gBAAgB,CAAC0E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACF/E,OAAA;MAAQsF,OAAO,EAAE1B,yBAA0B;MAAC2B,QAAQ,EAAEpE,OAAO,IAAI,CAACT,YAAY,CAACsB,MAAO;MAAA2C,QAAA,EAAC;IAEvF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR5D,OAAO,iBAAInB,OAAA;MAAA2E,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5B1D,KAAK,iBAAIrB,OAAA;MAAGwF,KAAK,EAAE;QAACC,KAAK,EAAE;MAAK,CAAE;MAAAd,QAAA,EAAEtD;IAAK;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9C,CAAC5D,OAAO,IAAI,CAACE,KAAK,iBACjBrB,OAAA;MAAA2E,QAAA,gBACE3E,OAAA;QAAA2E,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB/E,OAAA;QAAA2E,QAAA,GAAG,kBAAgB,EAAC7D,MAAM,CAACE,QAAQ;MAAA;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC/E,OAAA;QAAA2E,QAAA,GAAG,qBAAmB,EAAC7D,MAAM,CAACG,WAAW;MAAA;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9C/E,OAAA;QAAA2E,QAAA,GAAG,sBAAoB,EAAC7D,MAAM,CAACI,WAAW;MAAA;QAAA0D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/C/E,OAAA;QAAA2E,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B/E,OAAA;QAAA2E,QAAA,EACG/D,kBAAkB,CAACqD,GAAG,CAAC,CAACM,QAAQ,EAAEmB,KAAK,kBACtC1F,OAAA;UAAA2E,QAAA,GAAgB,oBACI,EAACJ,QAAQ,CAACoB,OAAO,EAAC,cAC1B,EAACpB,QAAQ,CAACC,aAAa,EAAC,iBACrB,EAACD,QAAQ,CAACE,gBAAgB,EAAC,kBAC1B,EAACF,QAAQ,CAACG,gBAAgB;QAAA,GAJjCgB,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxE,EAAA,CAhJQD,GAAG;AAAAsF,EAAA,GAAHtF,GAAG;AAkJZ,eAAeA,GAAG;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}